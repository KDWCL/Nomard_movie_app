{"version":3,"sources":["components/Movies.js","routes/Home.js","routes/About.js","components/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"uUA4CeA,MAtCf,YAA2D,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OACI,kBAAC,IAAD,CAAMC,GACF,CACIC,SAAS,UAAD,OAAWP,GACnBQ,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,YAIR,yBAAKI,UAAU,SACX,yBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKO,UAAU,eACX,wBAAIA,UAAU,gBAAgBP,GAC9B,wBAAIO,UAAU,eAAeR,GAC7B,wBAAIQ,UAAU,iBACRJ,EAAOO,KAAI,SAACC,EAAMC,GAAW,OAAO,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAErF,uBAAGJ,UAAU,kBAAkBN,EAAQa,MAAM,EAAE,KAA/C,WCQLC,G,iNA7BbT,MAAQ,CACNU,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC4BC,IAAMC,IAAI,4DADtC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAFxB,2C,6LAKVQ,KAAKN,Y,qIAEE,IAAD,EACsBM,KAAKlB,MAA1BU,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACA,iCAAUD,EACR,yBAAKT,UAAU,UACb,0BAAMA,UAAU,gBAAhB,gBAGF,yBAAKA,UAAU,UACZU,EAAOP,KAAI,SAAAe,GAAQ,OAAO,kBAAC,EAAD,CAAOZ,IAAKY,EAAM3B,GAAIA,GAAI2B,EAAM3B,GAAIC,KAAM0B,EAAM1B,KAAMC,MAAOyB,EAAMzB,MAAOC,QAASwB,EAAMxB,QAASC,OAAQuB,EAAMC,mBAAoBvB,OAAQsB,EAAMtB,kB,GAtBlKwB,IAAMC,YCCVC,MALf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GACL,uCCsBIG,E,4LArBPF,QAAQC,IAAIR,KAAKM,OAFF,MAGaN,KAAKM,MAA1BI,EAHQ,EAGRA,SAAUC,EAHF,EAGEA,aAEKC,IAAnBF,EAAS5B,OAIR6B,EAAQE,KAAK,O,+BAGZ,IACEH,EAAYV,KAAKM,MAAjBI,SACP,OAAGA,EAAS5B,MACD,8BAAO4B,EAAS5B,MAAMN,OAEtB,S,GAlBE2B,IAAMC,WCaZU,MAZf,SAAoBR,GAIhB,OAHAC,QAAQC,IAAIF,GAIR,6BACI,kBAAC,IAAD,CAAM1B,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCYGmC,MAdf,WACE,OACE,oCACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYvC,MAAM,MAClB,kBAAC,IAAD,CAAOwC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,kBAAC,IAAD,CAAOyB,KAAK,SAASE,UAAWb,IAChC,kBAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWT,KAEtC,qECbJU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8d6863da.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ProTypes from \"prop-types\";\n// state를 쓰지 않으므로 function형을 쓰겠음.\nimport \"./Movie.css\"\n\nfunction Movie({id, year, title, summary, poster, genres}){\n    return (\n        <Link to={\n            {\n                pathname:`/movie/${id}`,\n                state: {\n                    year,\n                    title,\n                    summary,\n                    poster,\n                    genres\n                }\n            }\n        }>\n            <div className=\"movie\">\n                <img src={poster} alt={title} title={title}/>\n                <div className=\"movie__data\">\n                    <h3 className=\"movie__title\">{title}</h3>\n                    <h5 className=\"movie__year\">{year}</h5>\n                    <ul className=\"movie__genres\">\n                         {genres.map((genre,index) => {return <li key={index} className=\"genres__genre\">{genre}</li>})}\n                    </ul>\n                    <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nMovie.propTypes = {\n    id: ProTypes.number.isRequired,\n    year: ProTypes.number.isRequired,\n    title: ProTypes.string.isRequired,\n    summary: ProTypes.string.isRequired,\n    poster: ProTypes.string.isRequired,\n    genres: ProTypes.arrayOf(ProTypes.string).isRequired\n}\n\nexport default Movie;\n\n// props -> location -> state에 가보면 Link를 통해서 props를 준것을 확인 가능","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"../components/Movies\";\nimport \"./Home.css\"\n\n\nclass Home extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  getMovies = async () => {\n    const {data:{data:{movies}}} =  await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n    this.setState({movies, isLoading: false})\n  }\n  async componentDidMount(){\n    this.getMovies()\n  };\n  render(){\n    const {isLoading, movies} = this.state;\n    return( \n    <section>{isLoading ? \n      <div className=\"loader\">\n        <span className=\"loader__text\">\"Loading..\"</span>\n      </div>\n      : \n      <div className=\"movies\">\n        {movies.map(movie=>{return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres}/>})}\n      </div> \n    }\n    </section>\n    )\n  }\n}\n\nexport default Home;\n\n// http://kdwcl.github.io/Nomard_movie_app","import React from 'react'\n\nfunction About(props){\n    console.log(props)\n    return <div>About</div>\n}\n\nexport default About;","import React from \"react\";\n\nclass Detail extends React.Component{\n    componentDidMount(){\n        // 랜더함수뒤에 실행되는 함수\n        console.log(this.props)\n        const {location, history} = this.props;\n        // 라우터를 통해서 주어진 props는 안에 location, history, match등이 있나보다.\n        if(location.state === undefined){\n            // Home으로 리다이렉트 시킬 것임\n            // this.props.history에서 push를 보면 push(path,state)함수가 들어가져 있음\n            // 이것을 활용할 것임\n            history.push(\"/\")\n        }\n    }\n    render(){\n        const {location} = this.props;\n        if(location.state){\n            return <span>{location.state.title}</span>\n        } else {\n            return null;\n        }\n        // if문을 써주는 이유는 render가 실행된 뒤에 componentDidMount가 실행되기 때문이다\n    }\n}\n\nexport default Detail;\n","import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\nfunction Navigation(props) {\n    console.log(props)\n    // 라우트를 통하지 않은 props에서는 location, history등이 나오지 않는다\n    // 출력값으로 {title:\"a\"}만 나옴\n    return (\n        <div>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n        </div>\n    )\n}\n\nexport default Navigation;\n\n// 리액트는 SPA인데 a태그를 사용하게 되면 html이기 때문에 그냥 페이지를 새로고침 시켜버린다\n// 리액트가 죽고 새페이지가 새로고침 되는 것임.\n// 해결책으로 Link라는 것을 사용한다.\n// Link라는 것을 사용하기 위해선 Router 안에 있어야 한다. 우리는 지금 해시라우터안에 있음\n","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\"\nimport Home from \"./routes/Home\"\nimport About from \"./routes/About\"\nimport Detail from \"./components/Detail\"\nimport Navigation from \"./components/Navigation\"\n\n\nfunction App(){\n  return (\n    <>\n    <HashRouter>\n      <Navigation title=\"a\"/>\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/movie/:id\" component={Detail}/>\n    </HashRouter>\n    <footer>나는 푸터얌</footer>\n    </>\n  )\n}\n\nexport default App;\n\n/* 라우터의 역할\n    /, /about와 같은 페이지가 있다면 그 페이지로 이동시\n    / -> Home.js\n    /about -> About.js\n    로 보내는 역할을 한다. \n    즉 url을 확인하고 명령(라우트 사용)에 따라 js파일을 화면에 표시해줌\n*/\n\n/* 라우트란\n    \"/\" <- 이런것을 의미\n    지금 보면 props(프로퍼티)인 path에 경로를 적어주고 component에 그 경로에 어떤 컴포넌트를 나타낼껀지 적어준다.\n    원래는 <Route path=\"/\"><Home/></Route> 이렇게도 가능하다\n*/\n\n/* \n  처음에 localhost:3000에 접속하면 localhost:3000/#/ 이렇게 뜨고 \n  테스트를 위해서는 localhost:3000/#/about 이렇게 들어가주면 된다.\n*/\n\n/* \n  리액트의 라우터는\n  /home/information <- 을 들어가게되면\n  /\n  /home\n  /home/information\n  을 전부 찾아서 랜더링해버린다. 컴포넌트 3개가 겹쳐서 화면에 출력되어버림.\n  \n  해결방법\n  <Route path=\"/\" exact={true} component={Home}/>\n  exact를 쓰는 것이다. 정확히 라우트가 동일하면 작동하게 만들어준다.\n  */\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// 리액트 어플리케이션은 하나의 컴포넌트만 랜더링한다\n"],"sourceRoot":""}