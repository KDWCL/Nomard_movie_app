{"version":3,"sources":["components/Movies.js","routes/Home.js","routes/About.js","components/Navigation.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","Home","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","About","Navigation","to","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"uUA8BeA,MAzBf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACRD,EAAOI,KAAI,SAACC,EAAMC,GAAW,OAAO,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAErF,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UCqBDC,G,iNA7BbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC4BC,IAAMC,IAAI,4DADtC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAFxB,2C,6LAKVQ,KAAKN,Y,qIAEE,IAAD,EACsBM,KAAKT,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACA,iCAAUD,EACR,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,gBAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAQ,OAAO,kBAAC,EAAD,CAAOb,IAAKa,EAAMC,GAAIA,GAAID,EAAMC,GAAIzB,KAAMwB,EAAMxB,KAAMC,MAAOuB,EAAMvB,MAAOC,QAASsB,EAAMtB,QAASC,OAAQqB,EAAME,mBAAoBtB,OAAQoB,EAAMpB,kB,GAtBlKuB,IAAMC,YCAVC,MAJf,WACI,OAAO,uCCSIC,MATf,WACI,OACI,6BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCaGC,MAbf,WACE,OACE,oCACA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWtB,IACxC,kBAAC,IAAD,CAAOoB,KAAK,SAASE,UAAWN,KAElC,qECXJO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e0ec20bc.chunk.js","sourcesContent":["import React from \"react\";\nimport ProTypes from \"prop-types\";\n// state를 쓰지 않으므로 function형을 쓰겠음.\nimport \"./Movie.css\"\n\nfunction Movie({year, title, summary, poster, genres}){\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title}/>\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__genres\">\n                     {genres.map((genre,index) => {return <li key={index} className=\"genres__genre\">{genre}</li>})}\n                </ul>\n                <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\n            </div>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    id: ProTypes.number.isRequired,\n    year: ProTypes.number.isRequired,\n    title: ProTypes.string.isRequired,\n    summary: ProTypes.string.isRequired,\n    poster: ProTypes.string.isRequired,\n    generes: ProTypes.arrayOf(ProTypes.string).isRequired\n}\n\nexport default Movie;\n\n// jsx에서는 label 태그에 들어가는 for은 htmlFor로 쓰임\n// 제너럴","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"../components/Movies\";\nimport \"./Home.css\"\n\n\nclass Home extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  getMovies = async () => {\n    const {data:{data:{movies}}} =  await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n    this.setState({movies, isLoading: false})\n  }\n  async componentDidMount(){\n    this.getMovies()\n  };\n  render(){\n    const {isLoading, movies} = this.state;\n    return( \n    <section>{isLoading ? \n      <div className=\"loader\">\n        <span className=\"loader__text\">\"Loading..\"</span>\n      </div>\n      : \n      <div className=\"movies\">\n        {movies.map(movie=>{return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres}/>})}\n      </div> \n    }\n    </section>\n    )\n  }\n}\n\nexport default Home;\n\n// http://kdwcl.github.io/Nomard_movie_app","import React from 'react'\n\nfunction About(){\n    return <div>About</div>\n}\n\nexport default About;","import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\nfunction Navigation() {\n    return (\n        <div>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n        </div>\n    )\n}\n\nexport default Navigation;\n\n// 리액트는 SPA인데 a태그를 사용하게 되면 html이기 때문에 그냥 페이지를 새로고침 시켜버린다\n// 리액트가 죽고 새페이지가 새로고침 되는 것임.\n// 해결책으로 Link라는 것을 사용한다.\n// Link라는 것을 사용하기 위해선 Router 안에 있어야 한다. 우리는 지금 해시라우터안에 있음\n","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\"\nimport Home from \"./routes/Home\"\nimport About from \"./routes/About\"\nimport Navigation from \"./components/Navigation\"\n\n\nfunction App(){\n  return (\n    <>\n    <HashRouter>\n      <Navigation/>\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/about\" component={About}/>\n    </HashRouter>\n    <footer>나는 푸터얌</footer>\n    </>\n  )\n}\n\nexport default App;\n\n/* 라우터의 역할\n    /, /about와 같은 페이지가 있다면 그 페이지로 이동시\n    / -> Home.js\n    /about -> About.js\n    로 보내는 역할을 한다. \n    즉 url을 확인하고 명령(라우트 사용)에 따라 js파일을 화면에 표시해줌\n*/\n\n/* 라우트란\n    \"/\" <- 이런것을 의미\n    지금 보면 props(프로퍼티)인 path에 경로를 적어주고 component에 그 경로에 어떤 컴포넌트를 나타낼껀지 적어준다.\n    원래는 <Route path=\"/\"><Home/></Route> 이렇게도 가능하다\n*/\n\n/* \n  처음에 localhost:3000에 접속하면 localhost:3000/#/ 이렇게 뜨고 \n  테스트를 위해서는 localhost:3000/#/about 이렇게 들어가주면 된다.\n*/\n\n/* \n  리액트의 라우터는\n  /home/information <- 을 들어가게되면\n  /\n  /home\n  /home/information\n  을 전부 찾아서 랜더링해버린다. 컴포넌트 3개가 겹쳐서 화면에 출력되어버림.\n  \n  해결방법\n  <Route path=\"/\" exact={true} component={Home}/>\n  exact를 쓰는 것이다. 정확히 라우트가 동일하면 작동하게 만들어준다.\n  */\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// 리액트 어플리케이션은 하나의 컴포넌트만 랜더링한다\n"],"sourceRoot":""}